{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab560
\pard\tx560\pardeftab560\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0 PLACEHOLDER - a work in progress until HTML versions get done\
=============================================================\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab560\pardirnatural

\f1\fs24 \cf0 \CocoaLigature1 Moonlander was written in 1973 and if you weren't there you might be amazed to learn that computer technology was a bit more primitive back then.  \
\
Q.	How much did the hardware cost?\
A.	It cost about $15,000 purchase a GT40 graphic terminal back in 1973.  If you played this game you were like working in a educational or commercial institution.\
\
Q.	How big is the Moonlander application?\
A.	The binary file is about 13KB bytes in size.  Moonlander was designed for a 16-bit computer with a total address of 64KB.  For comparison your iPad has at least 512MB of memory to run applications, about 8000x more memory than the GT40 graphic terminal\
\
Q.	Why are there long delays in the classic version?\
A.	This is an exact reproduction of the original Moonlander game and as much as possible has all the features, delays, and bugs of the original.  From the time you start playing until you end the game (with a good shake of the tablet), every effort has been made to recreate the game play from the original game.  Sorry if you find it too slow but this is the price to pay for the opportunity to step back in time and play a classic computer game.  If you find this annoying then play the modern version which speeds things up and uses controls better suited for a tablet.\
\
Q.	What is different in the modern version of Moonlander?\
A.	In the original Moonlander, the game repeats forever, causing the crashed landers (if left unattended) and other artifacts to collect on the lunar surface.  In order to give the user an option to end the game, a dialog at the end was added so you could quit the game and return to the menu screen (you can also do this at any time by shaking the tablet).  The original hardware used a light pen and we are stuck using a finger that is much less sensitive so these controls have been slightly enlarged and spread out to make it easier on the iPad and the fonts been increased in size since the display is a bit smaller than the original.\
\
Q.	What are some of the original bugs in the classic version of Moonlander?\
A.	One bug we noticed is that the original Moonlander kicks up dust when you are out fuel:\
\
\pard\tx560\pardeftab560\pardirnatural

\f2 \cf0 \CocoaLigature0        ;\
       ;               THIS ROUTINE WILL KICK UP DUST ON THE MOON.\
       ;\
       DUST:   CMP     RADARY,#150.            ;SEE IF WE ARE CLOSE TO THE MOON NOW.\
               BGE     NODUST                  ;DON'T GENERATE ANY DUST NOW.\
               MOV     #EXLIST,TEMP2           ;PICK UP ADDRESS OF WHERE TO LEAVE DUST.\
               MOV     PERTRS,TEMP             ;GET THE TRUST NOW.\
               CMP     TEMP,#63.               ;SEE IF MORE THAN 63%\
               BLE     DUSTB1                  ;NO. OK.\
               MOV     #63.,TEMP               ;IF MORE, SET TO 63% FOR SCALING.\

\f1 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab560\pardirnatural
\cf0 	If the fuel has run out your thrust drops to zero but the original only looks at the percent thrust selected on the slider which continues to operate until you land or crash.\
\
Q.	Any other interesting bugs?\
A.	Legend has it there are other well known bugs but you should explore the game and try to find them yourself.  The modern version does not fix any bugs that added to the excitement of the original.\
\
Q.	What were some of the challenges in recreating Moonlander?\
A.	Learning how to program an PDP11 minicomputer in assembly language was one of the bigger challenges.  Sometimes you end up staring for a long time at code like this\
\
\pard\tx560\pardeftab560\pardirnatural

\f2 \cf0 \CocoaLigature0                CLR     #MACTHR                 ;TOO CLOSE. WE'VE CRASHED INTO IT.\
               .=.-2                           ;AND LIKEWISE DEFINE THE MAC DESTROYED\
       MACTHR: .WORD   MACTHR                  ;FLAG AS STILL HAVING MACDONALDS.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab560\pardirnatural

\f1 \cf0 \CocoaLigature1 \
	or my favorite\
\
\pard\tx560\pardeftab560\pardirnatural

\f2 \cf0 \CocoaLigature0        DRAW22: INC     @#DFUDGE                ;---<<INSTRUCTION CHANGED>>---\
               CMP     DFUDGE,#3.\
               BLT     DRAW2V\
               MOV     (PC)+,@(PC)+\
               DEC     @(PC)+\
               .WORD   DRAW22\
               BR      DRAW2W\
       DRAW2V: CMP     DFUDGE,#-3.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab560\pardirnatural

\f1 \cf0 \CocoaLigature1 \
	trying to decipher what Jack was thinking when he wrote the code.  The second case is an example of self-modifying code, probably one of the many tricks used to save space.\
}